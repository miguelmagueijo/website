---
    import { Icons } from "../../svgs";
    import PagesLinks from "./PagesLinks.astro";
    import type { TabsIDsKeys } from "./";

    interface Props {
        activeID?: TabsIDsKeys
    }

    const { activeID } = Astro.props as Props;
---
<nav>
    <div class="hidden md:flex justify-between items-center">
        <a class="block w-[50px]" href="/">
            <img src="/Logo/MCrown_Classic_Dark.svg" />
        </a>
        <PagesLinks className="md:flex space-x-4 items-center md:text-lg" activeID={ activeID } />
        <!-- <div class="text-right">
            <span id="themeBtn" class="theme-btn"></span>
        </div> -->
    </div>
    <div class="block md:hidden">
        <div class="flex items-center justify-between">
            <Icons.HambugerMenu class="menu-btn-mobile stroke-white border border-white rounded [&.active]:bg-white [&.active]:stroke-primary dark:[&.active]:stroke-darkPrimary" width="30px" height="30px" />
            <div>
                <span id="themeBtnMobile" class="theme-btn"></span>
            </div>
        </div>
        <PagesLinks id="mobile-menu" className="hidden mt-6 space-y-2" activeID={ activeID } />
    </div>
</nav>

<script is:inline>
    function changeTheme(event) {
        document.documentElement.classList.toggle("dark");
        localStorage.theme = document.documentElement.classList.contains("dark") ? "dark" : "light";

        event.target.classList.add("animation");

        setTimeout(() => {
            event.target.classList.toggle("active");
        }, 150);

        setTimeout(() => {
            event.target.classList.remove("animation");
        }, 300);
    }

    const mobileMenuBtn = document.querySelector(".menu-btn-mobile");
    const mobileMenu = document.getElementById("mobile-menu");
    const themeBtnDesktop = document.getElementById("themeBtn");
    const themeBtnMobile = document.getElementById("themeBtnMobile");

    if (document.documentElement.classList.contains("dark")) {
        themeBtnDesktop.classList.add("active");
        themeBtnMobile.classList.add("active");
    }

    themeBtnDesktop.addEventListener("click", changeTheme);
    themeBtnMobile.addEventListener("click", changeTheme);


    mobileMenuBtn.addEventListener("click", () => {
        mobileMenu.classList.toggle("hidden");
        mobileMenuBtn.classList.toggle("active");
    });
</script>

<style>
    nav {
        @apply w-full rounded top-4 z-50;
        position: sticky;
        overflow: hidden;
        backdrop-filter: blur(1px);
    }

    .theme-btn {
        @apply text-lg md:text-xl;
        display: inline-block;
        cursor: pointer;
    }

    .theme-btn::before {
        content: '‚òÄÔ∏è';
    }

    .theme-btn.active::before {
        content: 'üåí';
    }
    
    @keyframes Theme {
        0%   { transform: scale(1) rotate(360deg); }
        50%  { transform: scale(0.80); }
        100% { transform: scale(1) rotate(0deg); }
    }

    .theme-btn.animation {
        animation: Theme 300ms linear infinite;
        transform-origin: center;
        background-color: transparent;
    }
</style>