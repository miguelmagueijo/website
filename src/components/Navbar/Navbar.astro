---
    import { Icons } from "../../svgs";
    import PagesLinks from "./PagesLinks.astro";
    import type { TabsIDsKeys } from "./";

    interface Props {
        activeID?: TabsIDsKeys
    }

    const { activeID } = Astro.props as Props;
---
<nav id="navbar-group">
    <div id="navbar-desktop" class="hidden md:flex justify-between items-center">
        <a class="block w-[50px]" href="/">
            <img src="/Logo/MCrown_Classic_Dark.svg" />
        </a>
        <PagesLinks className="md:flex space-x-4 items-center md:text-lg" activeID={ activeID } />
        <!-- <div class="text-right">
            <span id="themeBtn" class="theme-btn"></span>
        </div> -->
    </div>
    <div id="navbar-mobile" class="block md:hidden duration-300">
        <div class="flex justify-between px-4">
            <a class="block w-[50px]" href="/">
                <img src="/Logo/MCrown_Classic_Dark.svg" />
            </a>
            <div class="flex items-center justify-between">
                <Icons.HambugerMenu class="menu-btn-mobile stroke-sery duration-300 rounded [&.active]:bg-priry/20 [&.active]:stroke-priry" width="30px" height="30px" />
                <!-- <div>
                    <span id="themeBtnMobile" class="theme-btn"></span>
                </div> -->
            </div>
        </div>
        <PagesLinks id="mobile-menu" className="hidden mt-6 space-y-2 w-fit mx-auto" activeID={ activeID } />
    </div>
</nav>

<script is:inline>
    const navbar = document.getElementById("navbar-group");

    window.onscroll = () => {
        if (window.scrollY > 30) {
            navbar.classList.add("compact");
        } else {
            navbar.classList.remove("compact");
        }
    }

    function changeTheme(event) {
        document.documentElement.classList.toggle("dark");
        localStorage.theme = document.documentElement.classList.contains("dark") ? "dark" : "light";

        event.target.classList.add("animation");

        setTimeout(() => {
            event.target.classList.toggle("active");
        }, 150);

        setTimeout(() => {
            event.target.classList.remove("animation");
        }, 300);
    }

    const mobileMenuBtn = document.querySelector(".menu-btn-mobile");
    const mobileMenu = document.getElementById("mobile-menu");
    // const themeBtnDesktop = document.getElementById("themeBtn");
    // const themeBtnMobile = document.getElementById("themeBtnMobile");

    // if (document.documentElement.classList.contains("dark")) {
    //     themeBtnDesktop.classList.add("active");
    //     themeBtnMobile.classList.add("active");
    // }

    // themeBtnDesktop.addEventListener("click", changeTheme);
    // themeBtnMobile.addEventListener("click", changeTheme);


    mobileMenuBtn.addEventListener("click", () => {
        mobileMenu.classList.toggle("hidden");
        mobileMenuBtn.classList.toggle("active");
    });
</script>

<style>
    nav {
        @apply top-0 z-50 border-b-2 py-4;
        position: sticky;
        overflow: hidden;
        /* backdrop-filter: blur(1px); */
        transition-duration: 300ms;
        border-color: transparent;
        width: 100%;
    }

    nav.compact {
        @apply bg-baund/95 border-priry/30;
    }

    #navbar-desktop {
        width: 750px;
        margin: 0 auto;
        transition-duration: 300ms;
    }

    nav.compact #navbar-desktop {
        @apply px-4 pt-2;
    }

    nav.compact #navbar-mobile {
        @apply pt-1 px-2;
    }

    .theme-btn {
        @apply text-lg md:text-xl;
        display: inline-block;
        cursor: pointer;
    }

    .theme-btn::before {
        content: '‚òÄÔ∏è';
    }

    .theme-btn.active::before {
        content: 'üåí';
    }
    
    @keyframes Theme {
        0%   { transform: scale(1) rotate(360deg); }
        50%  { transform: scale(0.80); }
        100% { transform: scale(1) rotate(0deg); }
    }

    .theme-btn.animation {
        animation: Theme 300ms linear infinite;
        transform-origin: center;
        background-color: transparent;
    }
</style>